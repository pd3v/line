name: Release Build

on:
  push:
    branches: [develop]
  pull_request:
    branches: [develop]
    types: [closed]

jobs:
  build:
    runs-on: mac-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Checkout submodules
      run: git submodule update --init --recursive
    - name: Create Build Directory
      run: cmake -E make_directory ${{github.workspace}}/build
    - name: MacOS Configure CMake
      run: cmake -S . -B build -DCMAKE_BUILD_TYPE=Release -DRTMIDI_API_JACK=OFF -DRTMIDI_BUILD_TESTING=OFF -DRTMIDI_BUILD_SHARED_LIBS=OFF
    - name: Build
      run: cmake --build ./build --config Release
    - name: Create Artifact
      run: |
        mkdir release
        cp build/line release/line
    - name: Publish macOS Artifact
      uses: actions/upload-artifact@v2
      with:
        name: line macOS release v0.3.4
        path: release
    # runs-on: ubuntu-latest
    # steps:
    # - name: Checkout
    #   uses: actions/checkout@v2
    # - name: Install dependencies
    #   run: |
    #     sudo apt update
    #     sudo apt install jackd
    # - name: Checkout submodules
    #   run: git submodule update --init --recursive
    # - name: Create Build Directory
    #   run: cmake -E make_directory ${{github.workspace}}/build
    # - name: Configure CMake
    #   run: cmake -S . -B build -DCMAKE_BUILD_TYPE=Release -DRTMIDI_API_JACK=ON -DRTMIDI_BUILD_TESTING=OFF -DRTMIDI_BUILD_SHARED_LIBS=OFF
    # - name: Build
    #   run: cmake --build ./build --config Release
    # - name: Create Artifact
    #   run: |
    #     mkdir release
    #     cp build/line release/line
    # - name: Publish Linux Artifact
    #   uses: actions/upload-artifact@v2
    #   with:
    #     name: line Linux release
    #     path: release
